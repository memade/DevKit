macro(GFN_TOOLCHAIN_SET)
 if(UNIX)
  set(CMAKE_SYSTEM_NAME Linux)
  set (CMAKE_C_COMPILER             "clang")
  set (CMAKE_C_FLAGS                "-Wall -std=c99 -v")
  set (CMAKE_C_FLAGS_DEBUG          "-g")
  set (CMAKE_C_FLAGS_MINSIZEREL     "-Os -DNDEBUG")
  set (CMAKE_C_FLAGS_RELEASE        "-O4 -DNDEBUG")
  set (CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g")

  set (CMAKE_CXX_COMPILER             "clang++")
  set (CMAKE_CXX_FLAGS                "-Wall -v")
  set (CMAKE_CXX_FLAGS_DEBUG          "-g")
  set (CMAKE_CXX_FLAGS_MINSIZEREL     "-Os -DNDEBUG")
  set (CMAKE_CXX_FLAGS_RELEASE        "-O4 -DNDEBUG")
  set (CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g")

  set (CMAKE_AR      "/usr/bin/llvm-ar")
  set (CMAKE_LINKER  "/usr/bin/llvm-ld")
  set (CMAKE_NM      "/usr/bin/llvm-nm")
  set (CMAKE_OBJDUMP "/usr/bin/llvm-objdump")
  set (CMAKE_RANLIB  "/usr/bin/llvm-ranlib")
 elseif(WIN32)
  set(CMAKE_SYSTEM_NAME Windows)


 endif()
endmacro()

function(GFN_PROJECT_SOURCE_GET INPUT_DIR OUTPUT_HEADERS OUTPUT_SOURCES)
 set(NEW_OUTPUT_SOURCES)
 set(NEW_OUTPUT_HEADERS)
 file(GLOB_RECURSE NEW_OUTPUT_HEADERS "${INPUT_DIR}/*.h" "${INPUT_DIR}/*.hpp")
 file(GLOB_RECURSE NEW_OUTPUT_SOURCES 
 "${INPUT_DIR}/*.c" 
 "${INPUT_DIR}/*.cc" 
 "${INPUT_DIR}/*.cpp"
 "${INPUT_DIR}/*.cxx"
 "${INPUT_DIR}/*.rc" 
 "${INPUT_DIR}/*.def")

 set(${OUTPUT_HEADERS} ${NEW_OUTPUT_HEADERS} PARENT_SCOPE)
 set(${OUTPUT_SOURCES} ${NEW_OUTPUT_SOURCES} PARENT_SCOPE)
endfunction(GFN_PROJECT_SOURCE_GET)


#[[
function(GFN_SET_TARGET_OUTDIR)
 # ARG 0 => 'Build Target'
 # ARG 1 => 'Benchmark directory'
 # ARG 2 => 'PUBLISH_RUNTIME'
 # ARG 3 => 'PUBLISH_LIBRARY'
 # ARG 4 => 'PUBLISH_ARCHIVE'
 if(ARGC LESS 2)
 return()
 endif()
 list(GET ARGV 0 BUILD_TARGET)
 list(GET ARGV 1 BENCHMARK_DIR)

 if(ARGC GREATER 2)
 list(GET ARGV 2 RUNTIME_DIR)
 endif()
 if(ARGC GREATER 3)
 list(GET ARGV 3 LIBRARY_DIR)
 endif()
 if(ARGC GREATER 4)
 list(GET ARGV 4 ARCHIVE_DIR)
 endif()
 if(ARGC GREATER 5)
 list(GET ARGV 5 CURRENT_BUILD_PLATFORM)
 endif()
 if(ARGC GREATER 6)
 list(GET ARGV 6 CURRENT_BUILD_CONFIG_TYPE)
 endif()

 if("${RUNTIME_DIR}" STREQUAL "")
 set(RUNTIME_DIR "bin")
 endif()

 if("${LIBRARY_DIR}" STREQUAL "")
 set(LIBRARY_DIR "libs")
 endif()

 if("${ARCHIVE_DIR}" STREQUAL "")
 set(ARCHIVE_DIR "objs")
 endif()

 
 set(output_directories
 ${BENCHMARK_DIR}/${LIBRARY_DIR}/Debug
 ${BENCHMARK_DIR}/${LIBRARY_DIR}/Release
 ${BENCHMARK_DIR}/${RUNTIME_DIR}/Debug
 ${BENCHMARK_DIR}/${RUNTIME_DIR}/Release
 ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Debug
 ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Release
)

foreach(output_dir ${output_directories})
 file(MAKE_DIRECTORY ${output_dir})
endforeach()

set_target_properties(${BUILD_TARGET} PROPERTIES
 LIBRARY_OUTPUT_DIRECTORY$<CONFIG:DEBUG> ${BENCHMARK_DIR}/${LIBRARY_DIR}/Debug
 LIBRARY_OUTPUT_DIRECTORY$<CONFIG:RELEASE> ${BENCHMARK_DIR}/${LIBRARY_DIR}/Release
 RUNTIME_OUTPUT_DIRECTORY$<CONFIG:DEBUG> ${BENCHMARK_DIR}/${RUNTIME_DIR}/Debug
 RUNTIME_OUTPUT_DIRECTORY$<CONFIG:RELEASE> ${BENCHMARK_DIR}/${RUNTIME_DIR}/Release
 ARCHIVE_OUTPUT_DIRECTORY$<CONFIG:DEBUG> ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Debug
 ARCHIVE_OUTPUT_DIRECTORY$<CONFIG:RELEASE> ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Release
)
 get_target_property(LIBRARY_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} LIBRARY_OUTPUT_DIRECTORY)
 message(STATUS "LIBRARY_OUTPUT_DIRECTORY_DEBUG: ${LIBRARY_OUTPUT_DIRECTORY_DEBUG}")

 get_target_property(RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} RUNTIME_OUTPUT_DIRECTORY)
 message(STATUS "RUNTIME_OUTPUT_DIRECTORY_DEBUG: ${RUNTIME_OUTPUT_DIRECTORY_DEBUG}")

 get_target_property(ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} ARCHIVE_OUTPUT_DIRECTORY)
 message(STATUS "ARCHIVE_OUTPUT_DIRECTORY_DEBUG: ${ARCHIVE_OUTPUT_DIRECTORY_DEBUG}")
 
endfunction(GFN_SET_TARGET_OUTDIR)
]]

macro(GFN_SET_TARGET_OUTDIR args)
 # ARG 0 => 'Build Target -- PROJECT_NAME'
 # ARG 1 => 'Benchmark directory'
 # ARG 2 => 'PUBLISH_RUNTIME'
 # ARG 3 => 'PUBLISH_LIBRARY'
 # ARG 4 => 'PUBLISH_ARCHIVE'

 #message(STATUS "args total is '${ARGC}'.")
 if(${ARGC} GREATER 0)
  #message(STATUS "args total is '${ARGC}'.")
  set(INPUT_PROJECT_NAME ${ARGV0})
  message(STATUS "Target is '${INPUT_PROJECT_NAME}'.")
  set(BENCHMARK_DIR ${ARGV1})
  set(RUNTIME_DIR ${ARGV2})
  set(LIBRARY_DIR ${ARGV3})
  set(ARCHIVE_DIR ${ARGV4})
  set(SPECIFIED_DIR ${ARGV5}) # BOOL

  if("${RUNTIME_DIR}" STREQUAL "")
   set(RUNTIME_DIR "bin")
  endif()

  if("${LIBRARY_DIR}" STREQUAL "")
   set(LIBRARY_DIR "libs")
  endif()

  if("${ARCHIVE_DIR}" STREQUAL "")
   set(LIBRARY_DIR "objs")
  endif()

  #[[
  set(output_directories
  ${BENCHMARK_DIR}/${LIBRARY_DIR}/Debug
  ${BENCHMARK_DIR}/${LIBRARY_DIR}/Release
  ${BENCHMARK_DIR}/${RUNTIME_DIR}/Debug
  ${BENCHMARK_DIR}/${RUNTIME_DIR}/Release
  ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Debug
  ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Release
 )
 
 foreach(output_dir ${output_directories})
  file(MAKE_DIRECTORY ${output_dir})
 endforeach()
 ]]
 set_target_properties(${BUILD_TARGET} PROPERTIES
  LIBRARY_OUTPUT_DIRECTORY_DEBUG "${BENCHMARK_DIR}/${LIBRARY_DIR}/Debug"
  LIBRARY_OUTPUT_DIRECTORY_RELEASE "${BENCHMARK_DIR}/${LIBRARY_DIR}/Release"
  RUNTIME_OUTPUT_DIRECTORY_DEBUG "${BENCHMARK_DIR}/${RUNTIME_DIR}/Debug"
  RUNTIME_OUTPUT_DIRECTORY_RELEASE "${BENCHMARK_DIR}/${RUNTIME_DIR}/Release"
  ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${BENCHMARK_DIR}/${ARCHIVE_DIR}/Debug"
  ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${BENCHMARK_DIR}/${ARCHIVE_DIR}/Release"
 )

  message(STATUS "${LIBRARY_OUTPUT_DIRECTORY_DEBUG}")
  #get_target_property(LIBRARY_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} LIBRARY_OUTPUT_DIRECTORY_DEBUG)
  #message(STATUS "LIBRARY_OUTPUT_DIRECTORY_DEBUG: ${LIBRARY_OUTPUT_DIRECTORY_DEBUG}")
 
  #get_target_property(RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} RUNTIME_OUTPUT_DIRECTORY_DEBUG)
  #message(STATUS "RUNTIME_OUTPUT_DIRECTORY_DEBUG: ${RUNTIME_OUTPUT_DIRECTORY_DEBUG}")
 
  #get_target_property(ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} ARCHIVE_OUTPUT_DIRECTORY_DEBUG)
  #message(STATUS "ARCHIVE_OUTPUT_DIRECTORY_DEBUG: ${ARCHIVE_OUTPUT_DIRECTORY_DEBUG}")

 endif()
 #[[
 if(ARGC LESS 2)
 return()
 endif()
 list(GET ARGV 0 BUILD_TARGET)
 list(GET ARGV 1 BENCHMARK_DIR)

 if(ARGC GREATER 2)
 list(GET ARGV 2 RUNTIME_DIR)
 endif()
 if(ARGC GREATER 3)
 list(GET ARGV 3 LIBRARY_DIR)
 endif()
 if(ARGC GREATER 4)
 list(GET ARGV 4 ARCHIVE_DIR)
 endif()
 if(ARGC GREATER 5)
 list(GET ARGV 5 CURRENT_BUILD_PLATFORM)
 endif()
 if(ARGC GREATER 6)
 list(GET ARGV 6 CURRENT_BUILD_CONFIG_TYPE)
 endif()

 if("${RUNTIME_DIR}" STREQUAL "")
 set(RUNTIME_DIR "bin")
 endif()

 if("${LIBRARY_DIR}" STREQUAL "")
 set(LIBRARY_DIR "libs")
 endif()

 if("${ARCHIVE_DIR}" STREQUAL "")
 set(ARCHIVE_DIR "objs")
 endif()

 set(output_directories
 ${BENCHMARK_DIR}/${LIBRARY_DIR}/Debug
 ${BENCHMARK_DIR}/${LIBRARY_DIR}/Release
 ${BENCHMARK_DIR}/${RUNTIME_DIR}/Debug
 ${BENCHMARK_DIR}/${RUNTIME_DIR}/Release
 ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Debug
 ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Release
)

foreach(output_dir ${output_directories})
 file(MAKE_DIRECTORY ${output_dir})
endforeach()

set_target_properties(${BUILD_TARGET} PROPERTIES
 LIBRARY_OUTPUT_DIRECTORY$<CONFIG:DEBUG> ${BENCHMARK_DIR}/${LIBRARY_DIR}/Debug
 LIBRARY_OUTPUT_DIRECTORY$<CONFIG:RELEASE> ${BENCHMARK_DIR}/${LIBRARY_DIR}/Release
 RUNTIME_OUTPUT_DIRECTORY$<CONFIG:DEBUG> ${BENCHMARK_DIR}/${RUNTIME_DIR}/Debug
 RUNTIME_OUTPUT_DIRECTORY$<CONFIG:RELEASE> ${BENCHMARK_DIR}/${RUNTIME_DIR}/Release
 ARCHIVE_OUTPUT_DIRECTORY$<CONFIG:DEBUG> ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Debug
 ARCHIVE_OUTPUT_DIRECTORY$<CONFIG:RELEASE> ${BENCHMARK_DIR}/${ARCHIVE_DIR}/Release
)
 get_target_property(LIBRARY_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} LIBRARY_OUTPUT_DIRECTORY)
 message(STATUS "LIBRARY_OUTPUT_DIRECTORY_DEBUG: ${LIBRARY_OUTPUT_DIRECTORY_DEBUG}")

 get_target_property(RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} RUNTIME_OUTPUT_DIRECTORY)
 message(STATUS "RUNTIME_OUTPUT_DIRECTORY_DEBUG: ${RUNTIME_OUTPUT_DIRECTORY_DEBUG}")

 get_target_property(ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${BUILD_TARGET} ARCHIVE_OUTPUT_DIRECTORY)
 message(STATUS "ARCHIVE_OUTPUT_DIRECTORY_DEBUG: ${ARCHIVE_OUTPUT_DIRECTORY_DEBUG}")
 ]]
endmacro(GFN_SET_TARGET_OUTDIR)
#[[
function(GFN_SET_TARGET_OUTDIR)
 # ARG 0 => 'Build Target'
 # ARG 1 => 'Benchmark directory'
 # ARG 2 => 'PUBLISH_RUNTIME'
 # ARG 3 => 'PUBLISH_LIBRARY'
 # ARG 4 => 'PUBLISH_ARCHIVE'
 if(ARGC LESS 1)
 return()
 endif()
 list(GET ARGV 0 BENCHMARK_DIR)

 if(ARGC GREATER 1)
 list(GET ARGV 1 RUNTIME_DIR)
 endif()
 if(ARGC GREATER 2)
 list(GET ARGV 2 LIBRARY_DIR)
 endif()
 if(ARGC GREATER 3)
 list(GET ARGV 3 ARCHIVE_DIR)
 endif()
 if(ARGC GREATER 4)
 list(GET ARGV 4 CURRENT_BUILD_PLATFORM)
 endif()
 if(ARGC GREATER 5)
 list(GET ARGV 5 CURRENT_BUILD_CONFIG_TYPE)
 endif()

 if("${RUNTIME_DIR}" STREQUAL "")
 set(RUNTIME_DIR "bin")
 endif()

 if("${LIBRARY_DIR}" STREQUAL "")
 set(LIBRARY_DIR "libs")
 endif()

 if("${ARCHIVE_DIR}" STREQUAL "")
 set(ARCHIVE_DIR "objs")
 endif()

 set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${BENCHMARK_DIR}/${LIBRARY_DIR}/${CURRENT_BUILD_PLATFORM}/Debug)
 set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${BENCHMARK_DIR}/${LIBRARY_DIR}/${CURRENT_BUILD_PLATFORM}/Release)
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BENCHMARK_DIR}/${RUNTIME_DIR}/${CURRENT_BUILD_PLATFORM}/Debug)
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BENCHMARK_DIR}/${RUNTIME_DIR}/${CURRENT_BUILD_PLATFORM}/Release)
 set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${BENCHMARK_DIR}/${ARCHIVE_DIR}/${CURRENT_BUILD_PLATFORM}/Debug)
 set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${BENCHMARK_DIR}/${ARCHIVE_DIR}/${CURRENT_BUILD_PLATFORM}/Release)
 
 message(STATUS "LibraryFName is ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}")
 message(STATUS "RuntimeFName is ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}")

endfunction(GFN_SET_TARGET_OUTDIR)
]]

#example => GLOBAL_BUILD_OUTDIR("libs" "bin" "objs")
#argv0 LibraryFName
#argv1 RuntimeFName
#argv2 ArchiveFName
#argv3 bSpecifiedPath => 
#argv4 Benchmark directory
macro(GLOBAL_BUILD_OUTDIR arg)
if (CMAKE_CL_64)
set(CURRENT_COMPILE_PLATFORM x64)
else(CMAKE_CL_64)
set(CURRENT_COMPILE_PLATFORM x86)
endif(CMAKE_CL_64)

# set default
set(LibraryFName "bin")
set(RuntimeFName "bin")
set(ArchiveFName "librarys")
set(bSpecifiedPath OFF)

if(NOT(ARGV0 STREQUAL ""))
set(LibraryFName ${ARGV0})
elseif(ARGV0 STREQUAL "")
set(LibraryFName "")
endif(NOT(ARGV0 STREQUAL ""))

if(${ARGC} GREATER 1)
set(RuntimeFName ${ARGV1})
endif(${ARGC} GREATER 1)
if(${ARGC} GREATER 2)
set(ArchiveFName ${ARGV2})
endif(${ARGC} GREATER 2)

if(${ARGC} LESS 2)
set(RuntimeFName "")
endif(${ARGC} LESS 2)

if(${ARGC} LESS 3)
set(ArchiveFName "")
endif(${ARGC} LESS 3)

if(${ARGC} GREATER 3)
set(bSpecifiedPath ON)
endif(${ARGC} GREATER 3)

set(PUBLISH_LIBRARY ${CMAKE_CURRENT_SOURCE_DIR}/${LibraryFName})
set(PUBLISH_RUNTIME ${CMAKE_CURRENT_SOURCE_DIR}/${RuntimeFName})
set(PUBLISH_ARCHIVE ${CMAKE_CURRENT_SOURCE_DIR}/${ArchiveFName})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PUBLISH_LIBRARY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PUBLISH_RUNTIME})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PUBLISH_ARCHIVE})

if(bSpecifiedPath)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${PUBLISH_LIBRARY})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${PUBLISH_LIBRARY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PUBLISH_RUNTIME})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PUBLISH_RUNTIME})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PUBLISH_ARCHIVE})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PUBLISH_ARCHIVE})
#message(STATUS "bSpecifiedPath is set ON.")
else(bSpecifiedPath)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${PUBLISH_LIBRARY}/${CURRENT_COMPILE_PLATFORM}/Debug)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${PUBLISH_LIBRARY}/${CURRENT_COMPILE_PLATFORM}/Release)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PUBLISH_RUNTIME}/${CURRENT_COMPILE_PLATFORM}/Debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PUBLISH_RUNTIME}/${CURRENT_COMPILE_PLATFORM}/Release)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PUBLISH_ARCHIVE}/${CURRENT_COMPILE_PLATFORM}/Debug)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PUBLISH_ARCHIVE}/${CURRENT_COMPILE_PLATFORM}/Release)
endif(bSpecifiedPath)

#message(STATUS "CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
#message(STATUS "CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
#message(STATUS "CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")

#[[
message(STATUS "LibraryFName is ${LibraryFName}")
message(STATUS "RuntimeFName is ${RuntimeFName}")
message(STATUS "ArchiveFName is ${ArchiveFName}")
message(STATUS "bSpecifiedPath is ${bSpecifiedPath}")
message(STATUS "ARGC is ${ARGC}.")
message(STATUS "LibraryFName is ${LibraryFName}")
message(STATUS "RuntimeFName is ${RuntimeFName}")
message(STATUS "ArchiveFName is ${ArchiveFName}")
message(STATUS "bSpecifiedPath is ${bSpecifiedPath}")
]]

endmacro(GLOBAL_BUILD_OUTDIR)